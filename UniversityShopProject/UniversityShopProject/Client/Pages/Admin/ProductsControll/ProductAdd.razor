@inject HttpClient httpClient
@using System.IO
@inject NavigationManager NM

<button type="button" @onclick='ShowAddProductModal' class="btn btn-success my-2" data-toggle="modal" data-target="#AddProductModal">
    افزودن محصول جدید
</button>

@*--------------------------------------------------------------------------------------------*@
<div class="modal fade show @styleAddProductModal overflow-y-scroll" id="AddProductModalModal" tabindex="-1" role="dialog" aria-labelledby="AddProductModalTitle" aria-hidden="true" style="background:#00000080">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="AddProductModalTitle">درج محصول</h5>
                <button @onclick="CloseAddModal" type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <EditForm Model="productAdd" OnValidSubmit="@AddHandleValidSubmit">
                    <hr />
                    <span class="text-danger">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                    </span>
                    <div class="alert alert-danger w-100 @ShowFormatError">
                        فرمت تصویر تصویر انتخاب شده اشتباه است. لطفا تنها تصویر با فرمت jpg انتخاب کنید.
                    </div>
                    <div class="row w-100 mt-2">
                        <div class="col-6 w-100">
                            <label>
                                نام کالا :<span class="text-danger">*</span>
                            </label>
                            <InputText @bind-Value="productAdd.ProductName" class="form-control input-field" placeholder="نام کالا" />
                        </div>
                        <div class="col-6 w-100">
                            <label>
                                گروه کالا :<span class="text-danger">*</span>
                            </label>
                            <InputSelect @bind-Value="productAdd.CategoryId" class="form-control input-field" readonly>
                                @if(Categories != null)
                                {
                                    @foreach (var item in Categories)
                                    {
                                        if (item.CategoryId == int.Parse(id))
                                        {
                                            <option value="@item.CategoryId" selected>@item.CategoryName</option>
                                        }
                                    }
                                }
                            </InputSelect>
                        </div>
                        <div class="col-12 w-100 mt-2">
                            <label>
                                توضیحات :<span class="text-danger">*</span>
                            </label>
                            <InputTextArea @bind-Value="productAdd.ProductDiscription" class="form-control input-field" />
                        </div>
                        <div class="col-6 w-100 mt-2">
                            <label>
                                قیمت :<span class="text-danger">*</span>
                            </label>
                            <InputText @bind-Value="productAdd.Price" class="form-control input-field" />
                        </div>
                        <div class="col-6 w-100 mt-2">
                            <label>
                                تعداد :<span class="text-danger">*</span>
                            </label>
                            <InputNumber @bind-Value="productAdd.Number" class="form-control input-field" />
                        </div>
                        <div class="col-6 w-100 mt-2">
                            <label>
                                وضعیت :<span class="text-danger">*</span>
                            </label>
                            <InputSelect @bind-Value="productAdd.IsActive" class="form-control input-field">
                                <option value="true" selected>فعال</option>
                                <option value="false">غیرفعال</option>
                            </InputSelect>
                        </div>
                        <div class="col-12 w-100 mt-3">
                            <label>
                                تصویر کالا :<span class="text-danger">*</span>
                            </label>
                            <InputFile OnChange="SelectFile" accept="image/jpeg" required />
                        </div>
                    </div>
                    <hr />
                    <div class="mt-2">
                        <button @onclick="CloseAddModal" type="button" class="btn btn-secondary" data-dismiss="modal">بستن</button>
                        <button type="submit" class="btn btn-success" disabled="@isDisabled">درج محصول</button>
                    </div>
                </EditForm>
            </div>
        </div>

    </div>
</div>


@code {
    [Parameter]
    public string id { get; set; } = " ";
    public ProductViewModel productAdd = new ProductViewModel();
    [Parameter]
    public List<CategoryViewModel>? Categories { get; set; }
    public ImageFile filesBase64 = new ImageFile();
    public string styleAddProductModal { get; set; } = "d-none";
    public IBrowserFile? imageFile;
    bool isDisabled = false;
    public string ShowFormatError = "d-none";
}

@functions {
    // با کلیک برروی درج کالا، این تابع کالا را با استفاده از کنترلر ذخیره میکند
    public async Task AddHandleValidSubmit()
    {
        isDisabled = true;
        string fileName = Guid.NewGuid().ToString().Replace("-", "") + Path.GetExtension(filesBase64.fileName);
        var msg = await httpClient.PutAsJsonAsync($"/Product/SaveImage/{fileName}", filesBase64, System.Threading.CancellationToken.None);
        if (productAdd != null)
        {
            productAdd.ProductImagePath = fileName;
            productAdd.ProductId = 0;
            productAdd.infoUrl = "Info";
            productAdd.CategoryId = Convert.ToInt32(id);
            var res2 = await httpClient.PostAsJsonAsync<ProductViewModel>("Product/Create", productAdd);
            productAdd = new ProductViewModel();
            isDisabled = false;
            CloseAddModal();
        }
    }

    //این تابع در زمان انتخاب تصویر اجرا میشود و فایل تصویر را میخواند و فرمت آن را بررسی میکند
    public async Task SelectFile(InputFileChangeEventArgs e)
    {
        string extension = Path.GetExtension(e.File.Name);
        if (extension == ".jpg")
        {
            ShowFormatError = "d-none";
            var file = e.File; // get the files selected by the users
            var resizedFile = await file.RequestImageFileAsync(file.ContentType, 10000, 10000); // resize the image file
            var buf = new byte[resizedFile.Size]; // allocate a buffer to fill with the file's data
            using (var stream = resizedFile.OpenReadStream())
            {
                await stream.ReadAsync(buf); // copy the stream to the buffer
            }
            filesBase64 = (new ImageFile { base64data = Convert.ToBase64String(buf), contentType = file.ContentType, fileName = file.Name }); // convert to a base64 string!!
        }
        else
        {
            ShowFormatError = "d-block";
        }
    }

    //با کلیک برروی درج کالا، این تابع فرم را نمایش میدهد
    public void ShowAddProductModal()
    {
        if (styleAddProductModal == "d-none")
        {
            styleAddProductModal = "d-block";
        }
    }

    //فرم درج کالا را میبندد
    public void CloseAddModal()
    {
        if (styleAddProductModal == "d-block")
        {
            styleAddProductModal = "d-none";
        }
        
    }
}
